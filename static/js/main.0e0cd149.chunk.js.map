{"version":3,"sources":["assets/logoExplorer.svg","assets/githubBackground.svg","styles/global.ts","services/api.ts","pages/Dashboard/components/RepositoryCard.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/components/IssuesCard.tsx","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","githubBackground","api","axios","create","baseURL","RepositoryCard","fullname","owner","login","avatar_url","description","key","to","src","alt","size","Title","styled","h1","Form","form","Input","input","props","hasError","css","Button","button","shade","Repositories","div","Error","span","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","localStorageRepos","localStorage","getItem","JSON","parse","repos","setRepos","e","a","preventDefault","get","res","data","console","error","useEffect","setItem","stringify","logoExplorer","onSubmit","placeholder","onChange","target","value","type","map","repo","full_name","Header","header","RepositoryInfo","section","Issues","IssueCard","title","user","url","href","Repository","params","useRouteMatch","issues","setIssues","repoInfo","setRepoInfo","Promise","all","repository","loadData","stargazers_count","forks","open_issues","issue","id","html_url","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,8C,qoBCI5BC,kBAAf,IAS8BC,K,uDCPfC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,4B,yBC8BIC,EAnByB,SAAC,GAIlC,IAHLC,EAGI,EAHJA,SAGI,IAFJC,MAASC,EAEL,EAFKA,MAAOC,EAEZ,EAFYA,WAChBC,EACI,EADJA,YAEA,OACE,oCACE,kBAAC,IAAD,CAAMC,IAAKL,EAAUM,GAAE,sBAAiBN,IACtC,yBAAKO,IAAKJ,EAAYK,IAAKN,IAC3B,6BACE,gCAASF,GACT,2BAAII,IAEN,kBAAC,IAAD,CAAgBK,KAAM,Q,46DCpBvB,IAAMC,EAAQC,IAAOC,GAAV,KAQLC,EAAOF,IAAOG,KAAV,KAMJC,EAAQJ,IAAOK,MAAV,KAUd,SAACC,GAAD,OAAWA,EAAMC,UAAYC,YAAlB,QASFC,EAAST,IAAOU,OAAV,IAWDC,YAAM,GAAK,YAIhBC,EAAeZ,IAAOa,IAAV,KAqDZC,EAAQd,IAAOe,KAAV,KC7BHC,EA9Da,WAAO,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,OAEIF,mBAAS,IAFb,mBAEzBG,EAFyB,KAEbC,EAFa,OAGNJ,oBAAuB,WAC/C,IAAMK,EAAoBC,aAAaC,QAAQ,gCAC/C,OAAGF,EACMG,KAAKC,MAAMJ,GAGb,MATuB,mBAGzBK,EAHyB,KAGlBC,EAHkB,iDAgBhC,WAA6BC,GAA7B,eAAAC,EAAA,yDACED,EAAEE,iBAEGb,EAHP,uBAIIG,EAAc,4BAJlB,mDASsBrC,EAAIgD,IAAJ,iBAAkBd,IATxC,OASUe,EATV,OAUIL,EAAS,GAAD,mBAAKD,GAAL,CAAYM,EAAIC,QACxBf,EAAW,IACXE,EAAc,IAZlB,kDAcIc,QAAQC,MAAR,MACAf,EAAc,qCAflB,2DAhBgC,sBAmChC,OAvBAgB,qBAAU,WACRd,aAAae,QAAQ,+BAAgCb,KAAKc,UAAUZ,MACnE,CAACA,IAsBF,oCACE,yBAAK/B,IAAK4C,IAAc3C,IAAI,gBAC5B,kBAACE,EAAD,qCACA,kBAACG,EAAD,CAAMuC,SAvCsB,6CAwC1B,kBAACrC,EAAD,CACEG,WAAYa,EACZsB,YAAY,oBACZC,SAAU,SAACd,GAAD,OAAYV,EAAWU,EAAEe,OAAOC,QAC1CA,MAAO3B,IAET,kBAACT,EAAD,CAAQqC,KAAK,UAAb,WAED1B,GAAc,kBAACN,EAAD,KAAQM,GACvB,kBAACR,EAAD,KACGe,EAAMoB,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACE3D,SAAU2D,EAAKC,UACf3D,MAAO0D,EAAK1D,MACZG,YAAauD,EAAKvD,oB,khECrEvB,IAAMyD,EAASlD,IAAOmD,OAAV,KAsBNC,EAAiBpD,IAAOqD,QAAV,KAsDdC,EAAStD,IAAOa,IAAV,KCvDJ0C,GDqGMvD,IAAOe,KAAV,KCnHiB,SAAC,GAA0B,IAAxByC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACjD,OACE,oCACE,uBAAGhE,IAAKgE,EAAKC,KAAMD,GACjB,6BACE,gCAASD,GACT,2BAAID,IAEN,kBAAC,IAAD,CAAgB1D,KAAM,SC2Ef8D,EAxDc,WAAO,IAC1BC,EAAWC,cAAXD,OADyB,EAEL5C,qBAFK,mBAE1B8C,EAF0B,KAElBC,EAFkB,OAGD/C,mBAA0B,MAHzB,mBAG1BgD,EAH0B,KAGhBC,EAHgB,KAiBjC,OAZA7B,qBAAU,WAAM,4CACd,kCAAAP,EAAA,sEACqCqC,QAAQC,IAAI,CAC7CpF,EAAIgD,IAAJ,iBAAkB6B,EAAOQ,aACzBrF,EAAIgD,IAAJ,iBAAkB6B,EAAOQ,WAAzB,cAHJ,mCACSA,EADT,KACqBN,EADrB,KAKEG,EAAYG,EAAWnC,MACvB8B,EAAUD,EAAO7B,MANnB,4CADc,uBAAC,WAAD,wBASdoC,KACC,CAACT,EAAOQ,aAGT,oCACE,kBAACnB,EAAD,KACE,yBAAKtD,IAAK4C,IAAc3C,IAAI,KAC5B,kBAAC,IAAD,CAAMF,GAAG,KACP,kBAAC,IAAD,CAAeG,KAAM,KADvB,YAKDmE,GAAY,kBAACb,EAAD,KACX,gCACE,yBAAKxD,IAAKqE,EAAS3E,MAAME,WAAYK,IAAI,KACzC,6BACE,gCAASoE,EAAShB,WAClB,2BAAIgB,EAASxE,eAGjB,4BACE,4BACE,gCAASwE,EAASM,kBAClB,wCAEF,4BACE,gCAASN,EAASO,OAClB,wCAEF,4BACE,gCAASP,EAASQ,aAClB,gDAILV,GAAU,kBAACT,EAAD,KACRS,EAAOhB,KAAI,SAAA2B,GAAK,OAAI,kBAAC,EAAD,CAAWhF,IAAKgF,EAAMC,GAAInB,MAAOkB,EAAMlB,MAAOC,KAAMiB,EAAMjB,KAAKlE,MAAOmE,IAAKgB,EAAME,iBCxE/FC,EAPU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhE,IACjC,kBAAC,IAAD,CAAO+D,KAAK,2BAA2BC,UAAWpB,MCKvCqB,EATO,kBACpB,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,SCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0e0cd149.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoExplorer.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubBackground.0b819d63.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/githubBackground.svg'\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${githubBackground}) no-repeat 70% top;\n    --webkit-font-smoothing: antialiased\n  }\n\n  body, input, button {\n    font-size: 16px;\n    font-family: Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n})\n\nexport default api;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { FiChevronRight } from 'react-icons/fi';\n\ninterface Props {\n\n  fullname: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  description: string;\n}\n\nconst RepositoryCard: React.FC<Props> = ({\n  fullname,\n  owner: { login, avatar_url },\n  description,\n}) => {\n  return (\n    <>\n      <Link key={fullname} to={`/repository/${fullname}`}>\n        <img src={avatar_url} alt={login} />\n        <div>\n          <strong>{fullname}</strong>\n          <p>{description}</p>\n        </div>\n        <FiChevronRight size={20} />\n      </Link>\n    </>\n  );\n};\n\nexport default RepositoryCard;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface InputProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 40px;\n  max-width: 700px;\n  display: flex;\n`;\n\nexport const Input = styled.input<InputProps>`\n  flex: 1;\n  height: 70px;\n  padding: 0 24px;\n  border: 0;\n  border-radius: 5px 0 0 5px;\n  color: #3a3a3a;\n  border: 2px solid #fff;\n  border-right: 0;\n\n  ${(props) => props.hasError && css`\n    border-color: #C53030;\n  `}\n\n  &::placeholder {\n    color: #a8a8b3;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 210px;\n  height: 70px;\n  background: #04d361;\n  border-radius: 0 5px 5px 0;\n  border: 0;\n  color: #fff;\n  font-weight: bold;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#04D361')};\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n  transition: transform 0.2s;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #C53030;\n  margin-top: 8px;\n`;\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport api from '../../services/api';\n\nimport logoExplorer from '../../assets/logoExplorer.svg';\n\nimport RepositoryCard from './components/RepositoryCard';\nimport { Title, Form, Input, Button, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  description: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repos, setRepos] = useState<Repository[]>(() => {\n    const localStorageRepos = localStorage.getItem('@githubexplorer:repositories');\n    if(localStorageRepos) {\n      return JSON.parse(localStorageRepos);\n    }\n\n    return []\n  });\n\n  useEffect(() => {\n    localStorage.setItem('@githubexplorer:repositories', JSON.stringify(repos));\n  }, [repos]);\n\n  async function handleAddRepo(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    if (!newRepo) {\n      setInputError('You must type something.');\n      return;\n    }\n\n    try {\n      const res = await api.get(`/repos/${newRepo}`);\n      setRepos([...repos, res.data]);\n      setNewRepo('');\n      setInputError('');\n    } catch (error) {\n      console.error(error);\n      setInputError('Error looking up your repository.');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoExplorer} alt=\"githubimage\"/>\n      <Title>Explore GitHub repositories.</Title>\n      <Form onSubmit={handleAddRepo}>\n        <Input\n          hasError={!!inputError}\n          placeholder=\"Your search here.\"\n          onChange={(e: any) => setNewRepo(e.target.value)}\n          value={newRepo}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n      <Repositories>\n        {repos.map((repo) => (\n          <RepositoryCard\n            fullname={repo.full_name}\n            owner={repo.owner}\n            description={repo.description}\n          />\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #A8A8B3;\n    transition: color 0.2s;\n\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #C53030;\n  margin-top: 8px;\n`;\n","import React from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\n\ninterface Props {\n  title: string;\n  user: string;\n  url: string;\n}\n\nconst IssueCard: React.FC<Props> = ({ title, user, url }) => {\n  return (\n    <>\n      <a key={url} href={url} >\n        <div>\n          <strong>{user}</strong>\n          <p>{title}</p>\n        </div>\n        <FiChevronRight size={20} />\n      </a>\n    </>\n  );\n};\n\nexport default IssueCard;\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoExplorer from '../../assets/logoExplorer.svg';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nimport IssueCard from './components/IssuesCard';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface RepoInfo {\n  full_name: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  description: string;\n  open_issues: number;\n  forks: number;\n  stargazers_count: number;\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  user: {\n    login: string;\n  };\n  html_url: string;\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>();\n  const [issues, setIssues] = useState<Issue[]>();\n  const [repoInfo, setRepoInfo] = useState<RepoInfo | null>(null);\n\n  useEffect(() => {\n    async function loadData() {\n      const [repository, issues] = await Promise.all([\n        api.get(`/repos/${params.repository}`),\n        api.get(`/repos/${params.repository}/issues`),\n      ]);\n      setRepoInfo(repository.data);\n      setIssues(issues.data);\n    }\n    loadData();\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoExplorer} alt=\"\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Go back\n        </Link>\n      </Header>\n      {repoInfo && <RepositoryInfo>\n        <header>\n          <img src={repoInfo.owner.avatar_url} alt=\"\" />\n          <div>\n            <strong>{repoInfo.full_name}</strong>\n            <p>{repoInfo.description}</p>\n          </div>\n        </header>\n        <ul>\n          <li>\n            <strong>{repoInfo.stargazers_count}</strong>\n            <span>Stars</span>\n          </li>\n          <li>\n            <strong>{repoInfo.forks}</strong>\n            <span>Forks</span>\n          </li>\n          <li>\n            <strong>{repoInfo.open_issues}</strong>\n            <span>Open Issues</span>\n          </li>\n        </ul>\n      </RepositoryInfo>}\n      {issues && <Issues>\n        {issues.map(issue => <IssueCard key={issue.id} title={issue.title} user={issue.user.login} url={issue.html_url} />)}\n      </Issues>}\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Dashboard} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n)\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalSyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalSyle />\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}